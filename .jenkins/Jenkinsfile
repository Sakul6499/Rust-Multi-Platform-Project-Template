pipeline {
    agent {
        // If you need a special Jenkins Agent to run docker, specify the label **here and below**
        label 'docker'
    }
    options {
        // Disables concurrent builds
        // I.e. only one build at a time
        disableConcurrentBuilds()
    }
    stages {
        stage('Rust Versions') {
            agent {
                docker { 
                    // Which image to use
                    image 'rust:latest' 
                    // Reuse the same node, avoids having to clone the repository on all nodes
                    reuseNode true
                }
            }
            steps {
                // Print out versions
                sh 'rustc --version'
                sh 'cargo --version'
                sh 'rustup --version'
            }
        }
        stage('Rust Check') {
            agent {
                docker { 
                    // Which image to use
                    image 'rust:latest' 
                    // Reuse the same node, avoids having to clone the repository on all nodes
                    reuseNode true
                }
            }
            steps {
                // Run a check
                sh 'cargo check'
            }
        }
        stage('Rust Build (Debug)') {
            agent {
                docker { 
                    // Which image to use
                    image 'rust:latest' 
                    // Reuse the same node, avoids having to clone the repository on all nodes
                    reuseNode true
                }
            }
            steps {
                // Debug Build
                sh 'cargo build'
            }
        }
        stage('Rust Build (Release)') {
            agent {
                docker { 
                    image 'rust:latest' 
                    reuseNode true
                }
            }
            steps {
                // Release build
                sh 'cargo build --release'
            }
        }
        stage('Rust Test (Debug)') {
            agent {
                docker { 
                    // Which image to use
                    image 'rust:latest' 
                    // Reuse the same node, avoids having to clone the repository on all nodes
                    reuseNode true
                }
            }
            steps {
                // Debug Test
                sh 'cargo test --no-default-features'
            }
        }
        stage('Rust Test (Release)') {
            agent {
                docker { 
                    image 'rust:latest' 
                    reuseNode true
                }
            }
            steps {
                // Release Test
                sh 'cargo test --no-default-features --release'
            }
        }
        stage('DEBUG') {
            agent {
                docker { 
                    image 'rust:latest' 
                    reuseNode true
                }
            }
            steps {
                // Fail intentionally to test
                sh 'exit -1'
            }
        }
    }
    post {
        unsuccessful {
            mail body: '''
The Jenkins pipeline *${JOB_NAME}* (/${BUILD_DISPLAY_NAME}/) for 
branch '${BRANCH_NAME}' has failed.
Check the job <${JOB_URL}> or build <${BUILD_URL}> on jenkins for more 
information

---

This message was automatically send by Jenkins.
''', bcc: '', cc: '', charset: 'UTF-8', from: 'dev@sakul-flee.de', mimeType: 'text/plain', replyTo: 'dev@sakul-flee.de', subject: 'Jenkins Job ${JOB_NAME} (${BUILD_DISPLAY_NUMBER}) failed for branch "${BRANCH_NAME}"', to: 'dev@sakul-flee.de'
        }
        fixed {
            mail body: '''
The Jenkins pipeline *${JOB_NAME}* (/${BUILD_DISPLAY_NAME}/) for 
branch '${BRANCH_NAME}' has failed.
Check the job <${JOB_URL}> or build <${BUILD_URL}> on jenkins for more 
information

---

This message was automatically send by Jenkins.
''', bcc: '', cc: '', charset: 'UTF-8', from: 'dev@sakul-flee.de', mimeType: 'text/plain', replyTo: 'dev@sakul-flee.de', subject: 'Jenkins Job ${JOB_NAME} (${BUILD_DISPLAY_NUMBER}) got fixed for branch "${BRANCH_NAME}"', to: 'dev@sakul-flee.de'
        }
        changed {
            mail body: '''
The Jenkins pipeline *${JOB_NAME}* (/${BUILD_DISPLAY_NAME}/) for 
branch '${BRANCH_NAME}' changed status
Check the job <${JOB_URL}> or build <${BUILD_URL}> on jenkins for more 
information

---

This message was automatically send by Jenkins.
''', bcc: '', cc: '', charset: 'UTF-8', from: 'dev@sakul-flee.de', mimeType: 'text/plain', replyTo: 'dev@sakul-flee.de', subject: 'Jenkins Job ${JOB_NAME} (${BUILD_DISPLAY_NUMBER}) changed status for branch "${BRANCH_NAME}"', to: 'dev@sakul-flee.de'
        }
    }
}